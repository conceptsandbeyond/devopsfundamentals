# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
  
      - name: Build with Maven Wrapper
        run: ./mvnw clean -B package
        
      - name: Create Artifacts
        run: |
          sudo apt-get install zip
          zip deploy_artifacts.zip target/*.jar appspec.yml run.sh setup.sh stop.sh
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jar-file
          path: deploy_artifacts.zip
        
  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0       

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

  analyze:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
        
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=conceptsandbeyond_devopsfundamentals
      
  
  upload:
    runs-on: ubuntu-latest
    needs: [analyze]
    env:
      Region: us-east-1
      S3Bucket: cnbdevopsfundamentals
      S3Folder: githubactions1
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: Download an artifact
        uses: actions/download-artifact@v2
        with:
          name: jar-file

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::286144240398:role/AssumeRoleForGithubUsers
          aws-region: ${{ env.Region }}
          
      - name: deploy to S3
        run: |
          ls
          aws s3 cp *.zip s3://${{ env.S3Bucket }}/${{ env.S3Folder }}/
          

  deploy:
    runs-on: ubuntu-latest
    needs: [upload]
    env:
      Region: us-east-1
      S3Bucket: cnbdevopsfundamentals
      S3Folder: githubactions1
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::286144240398:role/AssumeRoleForGithubUsers
          aws-region: ${{ env.Region }}
          
          
      - name: CodeDeploy to EC2
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name CnBDevOpsApp \
            --deployment-group-name CnBDevOpsDG \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=${{ env.S3Bucket }},bundleType=zip,key=${{ env.S3Folder }}/deploy_artifacts.zip
